//Note:In this file both frontend and backend logic is included
//HTML form view 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Digital Scratch Card</title>
    <style>
        body {
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            background-color: #f0f0f0;
            font-family: Arial, sans-serif;
        }

        h1, p {
            text-align: center;
        }

        form {
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        input[type="text"] {
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 250px;
        }

        button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: #fff;
            font-size: 16px;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3;
        }

        .scratch-card {
            position: relative;
            width: 300px;
            height: 200px;
            background-color: grey;
            overflow: hidden;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .scratch-card .hidden-message {
            position: absolute;
            width: 100%;
            height: 100%;
            background-color: white;
            text-align: center;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            box-sizing: border-box;
            font-size: 20px;
            color: black;
        }

        .scratch-card canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <h1>Enter & Scratch</h1>
    <p>Enter Your Name and Reveal a Special Quote Just for You!</p>
    
    <form method="POST">
        <input type="text" name="name" placeholder="Enter your name" required>
        <button type="submit">Get Scratch Card</button>
    </form>

    {% if quote %}
    <div class="scratch-card" id="scratch-card">
        <div class="hidden-message">{{ quote }}</div>
        <canvas id="scratch-canvas"></canvas>
    </div>
    {% endif %}

    <script>
        const canvas = document.getElementById('scratch-canvas');
        const ctx = canvas.getContext('2d');
        const scratchCard = document.getElementById('scratch-card');
        const hiddenMessage = document.querySelector('.hidden-message');

        if (canvas) {
            let isDrawing = false;

            canvas.width = scratchCard.clientWidth;
            canvas.height = scratchCard.clientHeight;

            ctx.fillStyle = 'rgb(66, 133, 244)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            canvas.addEventListener('mousedown', () => { isDrawing = true; });
            canvas.addEventListener('mouseup', () => { isDrawing = false; });
            canvas.addEventListener('mousemove', (e) => {
                if (!isDrawing) return;
                ctx.globalCompositeOperation = 'destination-out';
                ctx.beginPath();
                ctx.arc(e.offsetX, e.offsetY, 15, 0, Math.PI * 2);
                ctx.fill();
            });

            canvas.addEventListener('touchstart', (e) => {
                e.preventDefault();
                isDrawing = true;
            });
            canvas.addEventListener('touchend', () => {
                isDrawing = false;
            });
            canvas.addEventListener('touchmove', (e) => {
                e.preventDefault();
                if (!isDrawing) return;
                const touch = e.touches[0];
                const rect = canvas.getBoundingClientRect();
                const x = touch.clientX - rect.left;
                const y = touch.clientY - rect.top;
                ctx.globalCompositeOperation = 'destination-out';
                ctx.beginPath();
                ctx.arc(x, y, 15, 0, Math.PI * 2);
                ctx.fill();
            });
        }
    </script>
</body>
</html>

// Backend logic 
from flask import Flask, render_template, request
import random

app = Flask(__name__)

# List of thoughtful quotes in Hindi
quotes = [
    " Hey, Your so prettiest",
    " Hello, luckiest boy",
    " Buddy, Keep trust on your efforts",
    " Bro,  something is special for you!",
    " Buddy, something is better than nothing!"
]

@app.route('/', methods=['GET', 'POST'])
def scratch_card():
    name = ""
    quote = ""
    if request.method == 'POST':
        name = request.form.get('name')
        if name:
            quote = random.choice(quotes).format(name)
    return render_template('YOUR HTML FORM VIEW LINK', name=name, quote=quote)

if __name__ == '__main__':
    app.run(debug=True)

